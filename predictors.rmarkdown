---
title: "Predictors"
author: "Maite"
format: html
editor: visual
theme: flatly
toc: true 
---

```{r include=FALSE}
knitr::opts_chunk$set(echo = FALSE, message=F, warning = F)
```

```{r include=FALSE}
library(here)
library(sf)
library(terra)
library(raster)
library(mapview)
library(kableExtra)
library(dplyr)
library(ggplot2)
library(units)
library(raster)
```


# theoretical model and available predictors

![theoretical model](theoretic_model.png){width="437"}

plot neighborhood

-   \% arable land in buffer
-   \% grassland in buffer

patch metrics

-   grassland patch area
-   euclidean nearest neighbor distance (enn)
-   standardized patch complexity (frac)
-   core area index (cai)

Land use intensity

-   LUI
-   grazing
-   mowing
-   fertilization
-   inter-annual variation in LUI

terrain

-   elevation
-   slope
-   aspect
-   roughness
-   twi

climate

-   bioclim

satellite data

-   räumlich und zeitliche spektrale Diversität
-   Produktivität via NDVI
-   ...?

soil properties

-   pH
-   ...?

Interesting [page](https://www.bgr.bund.de/EN/Themen/Boden/Produkte/produktkatalog_node_en.html;jsessionid=BAD9B7D166B97D4E4D6EB7DE291EE444.internet971) for germany-wide soil data

# Landscape situation via Basis-DLM

-   MV: kostenlos für wissenschaftliche Nutzung, bestellt über Formular, interne Nutzung

-   Sachsen-Anhalt: bestellt (50 € Gebühr)

-   BaWü: bestellt, (2800 €)

-   Brandenburg: kostenlos über https://geobroker.geobasis-bb.de/ bestellt und heruntergeladen

-   Thüringen: Download von https://www.geoportal-th.de/de-de/Downloadbereiche/Download-Offene-Geodaten-Th%C3%BCringen/Download-ATKIS-Basis-DLM

-   Bayern: heruntergeladen unter https://geodaten.bayern.de/opengeodata/OpenDataDetail.html?pn=atkis_basis_dlm

-   Hessen (kleines Stück): heruntergeladen von https://gds.hessen.de/INTERSHOP/web/WFS/HLBG-Geodaten-Site/de_DE/-/EUR/ViewDownloadcenter-Start

-   Niedersachsen (kleines Stück): heruntergeladen von https://opengeodata.lgln.niedersachsen.de/#bdlm

-   NRW downloaded from https://www.opengeodata.nrw.de/produkte/geobasis/lm/akt/basis-dlm/

-   Sachsen downloaded from https://www.geodaten.sachsen.de/downloadbereich-basis-dlm-4168.html

to get:

-   Rheinland-Pfalz kostenpflichtig https://lvermgeo.rlp.de/de/produkte/geotopografie/digitale-landschaftsmodelle-dlm/digitales-basislandschaftsmodell-basis-dlm/

-   Schleswig-Holstein angefragt (kostenpflichtig)

-   Saarland fürchterliche Website

-   Bremen Anfrage gesendet (kostenpflichtig)

-   not necessary because no sPlotOpen plot within: Berlin & Hamburg

[ATKIS-Objektartenkatalog Basis-DLM](https://www.adv-online.de/icc/extdeu/nav/a63/binarywriterservlet%3FimgUid%3D9201016e-7efa-8461-e336-b6951fa2e0c9%26uBasVariant%3D11111111-1111-1111-1111-111111111111)

Vegetation categories are as follows:

![](ATKIS_vegetation.png)

"rel_cat" is what I propose as relevant categories. The preparation of DLM data is in the qmd "Hypotheses_on_biodiversity_drivers.qmd"


```{r}
dlm <- st_read(here("../data/Basisdaten/landscape/DLM/Thueringen/changed/full_DLM_f_relcat_exploHAI.gpkg"))

```

```{r}
# show categories and legend
nam_rel_info_lookup <- unique(st_drop_geometry(dlm[ , c("rel_cat", "nam", "rel_info", "colors")]))

lookup_ordered <- nam_rel_info_lookup[order(nam_rel_info_lookup$nam),] 

lookup_ordered %>% kbl() %>% 
  kable_paper(full_width = T) %>% 
  column_spec(5, color = "white",
              background = lookup_ordered$colors,
              popover = paste("am:", mtcars$am[1:8]))
```


Where there's no DLM available, we can use the Copernicus High resolution layer for grassland (10m) from 2018 and the Corine agriculture classification from 2018.

Best extract data for grassland and agricultural proportion for all plots, compare where we have data.


```{r}
#| eval: false

cp <- here("../data/Basisdaten/landscape/Copernicus/")

# somehow there's an issue via terra and stars
agri = raster::raster(paste0(cp, "/corine_agricultural_area_2018/cor_agri_2018.tif"))
germany <- st_read(paste0(sap, "germany.gpkg"))

ger <- st_transform(germany, crs(agri))

agri_ger <- crop(agri, ger)
agri_ger_m <- mask(agri_ger, ger)

writeRaster(agri_ger_m, 
            paste0(cp, "/corine_agricultural_area_2018/cor_agri_2018_ger.tif"), overwrite=T)


# make a mosaic of HRL grassland data tiles
gf <- list.files(paste0(cp, "/Grassland_2018_Germany/GRA_2018_010m_de_03035_v010/GRA_2018_010m_de_03035_v010/DATA/"), pattern=".tif$", full.names=T)

grasslist <- lapply(seq(gf), function(i){
  r <- raster(gf[i])
})

grasslist$fun <- max
grass_ger <- do.call(mosaic, grasslist)


grass_ger <- crop(grass_ger, ger)
grass_ger_m <- mask(grass_ger, ger)


# cls <- data.frame(ID=1, cover=c("grassland"))
# levels(m) <- cls
# is.factor(m)
# m

writeRaster(grass_ger_m, paste0(cp, "/Grassland_2018_Germany/grassland_ger_HRL.tif"), overwrite=T)
```

```{r}
cp <- here("../data/Basisdaten/landscape/Copernicus/")

agri_ger <- raster(paste0(cp, "/corine_agricultural_area_2018/cor_agri_2018_ger.tif"))
grass_ger <- raster::raster(paste0(cp, "/Grassland_2018_Germany/grassland_ger_HRL.tif"))
```

```{r}
# get difference of agriculture and grassland HRL to receive actual agriculture
agri <- agri_ger - grass_ger
mapview(grass_ger_m)+
  mapview(agri_ger)
```


# Abiotic niche


```{r}
#| warning: false
#| results: hide

dp <- "../data/"
sap <- here(dp, "/studyarea")

# explo geometries
geo_exp <- st_read(here(sap, "all3explos.gpkg"))
plots_exp <- st_read(here(sap, "experiementalplots.gpkg"))

# landscapes
lsc_all <- st_read(here(sap, "landscape_all.gpkg"))
lsc_ALB <- st_read(here(sap, "landscape_ALB_UTM_extended.shp"))
lsc_ALB$NAME <- "Swabian Alb"
lsc_HAI <- st_read(here(sap, "landscape_HAI_UTM.gpkg"))
lsc_SEG <- st_read(here(sap, "landscape_SEG_UTM.gpkg"))

d_geo <- st_read(paste0(dp, "16826_4.gpkg"))
```


## climate and weather

https://www.worldclim.org/data/bioclim.html Bioclim

![](bioclim_codes.png)


```{r, results='hide',fig.keep='all'}
# climate data 
list.dirs(here(dp, "/Basisdaten"), full.names = FALSE)

bioclim_vars <- c("Ann_Mean_Temp", "Mean_Drnl_Rng", "Isotherm", 
                  "Temp_Seas", "Max_T", "Min_T", "T_Ann_Rng", 
                  "Mean_T_Wet", "Mean_T_Dry", "Mean_T_Warm", 
                  "Mean_T_Cold", "Ann_Prec", "Prec_Wet", "Prec_Dry", "Prec_Seas", "Prec_Wet", "Prec_Dry", "Prec_Warm", "Prec_Cold")
```

```{r}
bioclim_ALB_UTM <- rast(here(dp, "/Basisdaten/climate/bioclim_ALB_UTM.tif"))
bioclim_ALB_weather_UTM <- rast(here(dp, "/Basisdaten/weather/bioclim_ALB_weather_UTM.tif"))
```

```{r, results='hide',fig.keep='all'}
# weather data: 
bioclim_ALB_weather_UTM <- rast(here(dp, "/Basisdaten/weather/ALB_bioclim-2021_UTM.tif"))
names(bioclim_ALB_weather_UTM) <- bioclim_vars

par(mfrow=c(3,3))
lapply( seq(nlyr(bioclim_ALB_weather_UTM)), function(i) {
  plot(bioclim_ALB_weather_UTM[[i]], main=names(bioclim_ALB_weather_UTM[[i]]))
})
```


## topography


```{r, results='hide',fig.keep='all'}
top_ALB_UTM <- rast(here(dp, "/Basisdaten/topography/copernicus/ALB_top_UTM.tif"))

par(mfrow=c(2,2))
lapply( seq(nlyr(top_ALB_UTM)), function(i) {
  plot(top_ALB_UTM[[i]], main=names(top_ALB_UTM[[i]]))
})

```


Choosing two extents for visualization of abiotic basis data together with reference shannon:


```{r}
#| results: hide
#| fig-keep: all

# plot(d_geo[d_geo$explrtr == "ALB", "shannon"])
ex_ext_1 <- st_read(paste0(dp, "studyarea/ex_ext.shp"))
ex_ext_2 <- st_read(paste0(dp, "studyarea/ex_ext_2.shp"))

top_ALB_ex <- crop(top_ALB_UTM, ex_ext_1)
top_ALB_ex2 <- crop(top_ALB_UTM, ex_ext_2)

# bioclim variables are only 6 values for this extent, so doesn't really make sense
```

```{r}
#| layout-ncol: 2

pal <-  mapviewPalette("mapviewSpectralColors")

mapview(d_geo[d_geo$explrtr == "ALB", "shannon"],
        cex="shannon",
        legend=TRUE, 
        layer.name="shannon",
        col.regions = pal(50),
        map.types = "Esri.WorldImagery")+
  mapview(ex_ext_1,
          layer.name="extent1",
          alpha.regions=0)+
  mapview(as(top_ALB_ex, "Raster"), 
          na.color="#00000000",
          alpha.regions=1,
          map.types = "Esri.WorldImagery")


mapview(d_geo[d_geo$explrtr == "ALB", "shannon"],
        cex="shannon",
        legend=TRUE, 
        layer.name="shannon",
        col.regions = pal(50),
        map.types = "Esri.WorldImagery")+
  mapview(ex_ext_2,
          layer.name="extent2",
          alpha.regions=0)+
  mapview(as(top_ALB_ex2, "Raster"), 
          na.color="#00000000",
          alpha.regions=1,
          map.types = "Esri.WorldImagery")



```


## Soil properties

Bodenübersichtskarte 1:200.000, i.e. 1 cm = 0.2 km for whole Germany [from here](https://geoviewer.bgr.de/mapapps/resources/apps/bodenatlas/index.html?lang=de&tab=boedenDeutschlands)

[BGR](https://produktcenter.bgr.de/terraCatalog/DetailResult.do?fileIdentifier=154997F4-3C14-4A53-B217-8A7C7509E05F)

![](BUEK200.png){width="189"}


```{r}
#| warning: false
#| results: hide

buek200_lscs <- st_read(here(dp, "/Basisdaten/soil/buek200_all_landscapes.gpkg"))

# try converting from latin1 (?) to utf8
buek200_lscs$Legende = iconv(buek200_lscs$Legende, "latin1", "UTF-8")
buek200_lscs$Hinweis = iconv(buek200_lscs$Hinweis, "latin1", "UTF-8")

buek200_lscs$NAME[buek200_lscs$NAME=="Schw\xe4bische Alb"] <- "Swabian Alb"
buek200_lscs$NAME[buek200_lscs$NAME=="Rückland der Mecklenburg-Brandenburgischen Seenplatte"] <- "Rueckl_Mck_Seen"
buek200_lscs$NAME[buek200_lscs$NAME=="Thüringer Becken und Randplatten"] <- "Thuer_Randpl"

# doesn't render, unfortunately, there's some encoding issue
# mapview(buek200_lscs, 
#         zcol="Symbol", legend=FALSE)

```


![](flaechenbodenform_erlaeuterung.png){width="466"} aus [BUEK300](https://lbgr.brandenburg.de/sixcms/media.php/9/BGB-1-2_03_Kuehn_53-60.pdf)


```{r}
#| warning: false
#| results: hide
dp <- "../data/"
buek200_lscs <- st_read(here(dp, "/Basisdaten/soil/buek200_all_landscapes.gpkg"))
st_agr(buek200_lscs) = "constant"


# extract Bodensystematische Einheiten
bsyse <- trimws(sub("\\:.*", "", sub("\\,.*", "", substr(buek200_lscs$Legende, 4, 80))))

buek200_lscs$BSysE <- bsyse
buek200_lscs$area <- st_area(buek200_lscs)

bg <- buek200_lscs |> 
  group_by(BSysE) |>
  summarise(area_sum=sum(area)) |>
  as.data.frame()

ggplot(bg, aes(x=reorder(BSysE, -area_sum), 
               y=area_sum))+
  geom_bar(stat="identity")+
  theme_minimal()+
  xlab("Bodensystematische Einheit")+
  ggtitle("Flächenanteile bodensystematischer Einheiten in allen drei Landschaften")+
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))



# st_write(buek200_lscs, here(dp, "/Basisdaten/soil/buek200_all_landscapes.gpkg"), append=FALSE)

buekex <- st_intersection(buek200_lscs, d_geo)


#### troubleshooting all SEG plots appear twice in intersection 
# table(d_geo$ep)
# buekex[buekex$ep=="SEG34",]
# ids <- which(table(buekex$ep)==2)
# lapply(seq(ids), function(i) {
#   buekex$NRKART[buekex$ep==names(ids)[i]]
# })

### something is wrong with the buek200_lscs file, same NRKART, but different NAME and OBJECTID, eliminating one row

ids <- which(table(buekex$ep)==2)
sel <- lapply(seq(ids), function(i) {
  # buekex$NRKART[buekex$ep==names(ids)[i]]
  buekex[buekex$ep==names(ids)[i],][1,]
})
sel <- do.call("rbind", sel)

`%notin%` <- Negate(`%in%`)
buekex <- rbind(buekex[buekex$ep %notin% names(ids),], sel)

beg <- buekex |> 
  group_by(BSysE) |>
  summarise(area_sum=sum(area)) |>
  as.data.frame()

ggplot(buekex, aes(reorder(BSysE,BSysE,
                     function(x)-length(x))))+
  geom_bar(stat="count")+
  theme_minimal()+
  xlab("Bodensystematische Einheiten")+
  ggtitle("Zugehörigkeit der Explo Plots zu Bodensystematischer Einheit")+
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))


```


Most explo plots belong to soil type Rendzina (RR), Niedermoor (HN), Parabraunerde (LL), Pararendzina (RZ), Gley (GG)... [Overview Bodentyp](https://de.wikipedia.org/wiki/Bodentyp)

Soil types of the explo plots are well represented in the landscape - apart maybe from HNv, which although less, is still represented relatively well in the landscape.

### Soil data to think about

There is also GEMAS data [here](https://geoportal.bgr.de/mapapps/resources/apps/geoportal/index.html?lang=de#/datasets/portal/b5d4d9ab-153c-4c51-a19c-cc81a62f9b7b)

There is also many elements, like P, Ca, C (Total, Organic, Inorganic Carbon), Na, ... [here](https://geoportal.bgr.de/mapapps/resources/apps/geoportal/index.html?lang=de#/datasets/portal/1094c5fd-bd58-466e-a309-412bb7636eec)

somehow not able to download them in bulk...

#### We're using:

[EUROPEAN SOIL DATA CENTRE (ESDAC)](https://esdac.jrc.ec.europa.eu/resource-type/european-soil-database-soil-properties)

**Maps of Soil Chemical properties at European scale based on LUCAS 2009/2012 topsoil data**

500m resolution

those are available:

![](data_avail.png){width="452"}


```{r}
#| eval: false
path <- here("../data/Basisdaten/soil/ESDAC/chemical/")
fp <- rev(list.files(path, full.names = T))
rp <- list.files(fp, pattern=".tif$", full.names = T)

chem <- rast(rp)
germ_chem <- st_transform(germany, st_crs(chem))

chem_ger <- crop(chem, germ_chem)
chem_ger_m <- mask(chem_ger, germ_chem)

chem_ger_m_proj <- project(chem_ger_m, crs(bioclim_ALB_UTM))

writeRaster(chem_ger_m_proj,paste0(path, "/soil_chem_ger.grd"))



# PHYSICAL 
path <- here("../data/Basisdaten/soil/ESDAC/physical/")

# get all the zip files
zipF <- list.files(path = path, pattern = "*.zip", full.names = TRUE)

# unzip all your files
ldply(.data = zipF, .fun = unzip, exdir = outDir)
```

```{r}
path <- here("../data/Basisdaten/soil/ESDAC/chemical/")
soil_chem <- rast(paste0(path, "/soil_chem_ger.grd"))
names(soil_chem)
mapview(raster(chem_ger_m$CN), na.color="#00000000")

```


**European Soil Database v2.0**

![](European_Soil_Database.png){width="286"}

![](European_Soil_Database_II.png){width="288"}

# human impact

## LUI Land use intensity


```{r}
lui <- read.csv(list.files(here("../data/LUI/LuiData/"), pattern=".txt$", full.names=T))

# fix some things in LUI dataset to merge correctly 
lui$year <- substring(lui$YEAR, 12,15)

idshort <- lui$PLOTID[nchar(lui$PLOTID) == 4] 
idshortfix <- paste0(substring(idshort, 1,3), "0", substring(idshort, 4,4))
lui$PLOTID[nchar(lui$PLOTID) == 4]  <- idshortfix


lui13 <- filter(lui, year=="2013")
d_lui <- merge(d_geo, lui13, by.x="ep", by.y="PLOTID")
# table(d_lui$year) # now all 150plots are merged 

ggplot(d_lui, aes(LUI, shannon))+
  geom_point()+
  geom_smooth(span=2)+
  theme_minimal()+
  ggtitle("LUI x biodiversity", subtitle = paste0("n = ", nrow(d_lui[d_lui$year == "2013",])))

```


Germany wide LUI by Lange et al. (Lange_22.pdf) and available in [webMap](https://ufz.maps.arcgis.com/apps/webappviewer/index.html?id=192195ae64534ff9ae655082b6145774) requested via Email.

## (patch history)

# Satellite data

